{
	"name": "dataflow_csv_to_sql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sql_songplays",
						"type": "DatasetReference"
					},
					"name": "songplaystable"
				},
				{
					"dataset": {
						"referenceName": "sql_albums",
						"type": "DatasetReference"
					},
					"name": "albumstable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "csv_songplays",
						"type": "DatasetReference"
					},
					"name": "songplayscsv"
				}
			],
			"transformations": [
				{
					"name": "exportdate"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SongPlayID as integer,",
				"          SongID as integer,",
				"          UserID as integer,",
				"          LocationID as integer,",
				"          StartTime as timestamp,",
				"          EndTime as timestamp,",
				"          {StartTime UTC} as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> songplaystable",
				"source(output(",
				"          AlbumID as integer,",
				"          ArtistID as integer,",
				"          Name as string,",
				"          ReleaseDate as date,",
				"          LabelID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> albumstable",
				"songplaystable derive(ExportDate = currentUTC()) ~> exportdate",
				"albumstable derive() ~> derivedColumn1",
				"exportdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SongPlayID as string,",
				"          SongID as string,",
				"          UserID as string,",
				"          LocationID as string,",
				"          StartTime as string,",
				"          EndTime as string,",
				"          {StartTime UTC} as string,",
				"          Latitude as string,",
				"          Longitude as string",
				"     ),",
				"     filePattern:'songplays',",
				"     umask: 0222,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          SongPlayID,",
				"          SongID,",
				"          UserID,",
				"          LocationID,",
				"          StartTime,",
				"          EndTime,",
				"          {StartTime UTC},",
				"          Latitude,",
				"          Longitude,",
				"          ExportDate",
				"     )) ~> songplayscsv"
			]
		}
	}
}