Views that answer the questions posed at the beginning in README file.


	-- Alphabetical list of the users -- 

	CREATE VIEW Alphabeticallistusers AS
	SELECT FirstName+' '+LastName AS Name FROM Users 


	-- Alphabetical list of the musical genres --

	CREATE VIEW Alphabeticallistgenres AS
	SELECT Name FROM Genre 


	-- Alphabetical list of the labels --

	CREATE VIEW Alphabeticallistlabels AS
	SELECT DISTINCT Name FROM Labels 

	-- Alphabetical list of the bands by country -- 

	CREATE VIEW Alphabeticallistbandsbycountry AS
	SELECT DISTINCT art.name AS ArtistName, loc.Country AS ArtistCountry
	FROM Artists AS art
	INNER JOIN [Location] AS loc ON art.LocationID = loc.LocationID


	-- Alphabetical list of the bands, labels, genre and album name --

	CREATE VIEW listbandlabelgenrealbumname AS
	SELECT DISTINCT art.name AS ArtistName, lab.Name AS LabelName, gnr.Name AS GenreName, alb.Name AS AlbumName
	FROM Artists AS art
	INNER JOIN Albums AS alb ON art.ArtistID = alb.ArtistID
	INNER JOIN [Labels] AS lab ON lab.LabelID = alb.LabelID
	INNER JOIN [Songs] AS sgs ON sgs.AlbumID = alb.AlbumID
	INNER JOIN Genre AS gnr ON gnr.GenreID = sgs.GenreID


	-- List of the five countries with more bands -- 

	CREATE VIEW Top5countriesmorebands AS
	SELECT TOP(5) loc.country, COUNT(art.name) AS QtyArtists
	FROM Location AS loc
	INNER JOIN Artists AS art ON art.locationID = loc.locationID
	GROUP BY loc.country
	ORDER BY COUNT(art.name) DESC


	-- List of the ten bands with more albums --

	CREATE VIEW top10bandswithmorealbums AS
	SELECT TOP(10) art.name AS ArtistName, COUNT(alb.albumID) AS QtyAlbums
	FROM Artists AS art
	INNER JOIN Albums AS alb ON art.artistID = alb.artistID
	GROUP BY art.name
	ORDER BY COUNT(alb.albumID) DESC


	-- List of the five labels with more albums --

	CREATE VIEW top5labelswithmorealbums AS
	SELECT TOP(5) lab.name AS LabelName, COUNT(alb.albumID) AS QtyAlbums
	FROM Labels AS lab
	INNER JOIN Albums AS alb ON lab.LabelID = alb.LabelID
	GROUP BY lab.name
	ORDER BY COUNT(alb.albumID) DESC


	-- List of the five genres with more albums --

	CREATE VIEW top5genreswithmorealbums AS
	SELECT TOP(5) gnr.name AS Genre, COUNT(alb.albumID) AS QtyAlbums
	FROM Genre AS gnr
	INNER JOIN Songs AS sgs ON sgs.GenreID = gnr.GenreID
	INNER JOIN Albums AS alb ON sgs.AlbumID = alb.AlbumID
	GROUP BY gnr.name
	ORDER BY COUNT(alb.albumID) DESC


	-- List of the twenty songs from longests albums --

	CREATE VIEW top20songsfromlongestsalbums AS
	SELECT TOP(20) sgs2.Title, alb.Name AS AlbumName, 
	sum( 
	DATEPART(SECOND, sgs.Duration) + 60 * 
	DATEPART(MINUTE, sgs.Duration) + 3600 * 
	DATEPART(HOUR, sgs.Duration )) AS TotalTimeAlbum
	FROM Songs AS sgs
	INNER JOIN Songs AS sgs2 ON sgs.AlbumID = sgs2.AlbumID
	INNER JOIN Albums AS alb ON sgs.AlbumID = alb.AlbumID
	GROUP BY sgs2.Title, alb.Name
	ORDER BY TotalTimeAlbum DESC


	-- List of the twenty songs from shortest album --

	CREATE VIEW top20songsfromshortestalbums AS
	SELECT TOP(20) sgs2.Title, alb.Name AS AlbumName, 
	sum( 
	DATEPART(SECOND, sgs.Duration) + 60 * 
	DATEPART(MINUTE, sgs.Duration) + 3600 * 
	DATEPART(HOUR, sgs.Duration )) AS TotalTimeAlbum
	FROM Songs AS sgs
	INNER JOIN Songs AS sgs2 ON sgs.AlbumID = sgs2.AlbumID
	INNER JOIN Albums AS alb ON sgs.AlbumID = alb.AlbumID
	GROUP BY sgs2.Title, alb.Name
	ORDER BY TotalTimeAlbum ASC


	-- List of the ten longest albums --

	CREATE VIEW top10longestalbums AS
	SELECT TOP(10)
	alb.Name AS AlbumName,
	sum( 
		DATEPART(SECOND, Duration) + 60 * 
		DATEPART(MINUTE, Duration) + 3600 * 
		DATEPART(HOUR, Duration )) AS TotalTimeSec,
	COUNT(sgs.Title) AS QtySongs
	FROM Songs AS sgs
	INNER JOIN Albums AS alb ON alb.AlbumID = sgs.AlbumID
	GROUP BY sgs.AlbumID, alb.Name
	ORDER BY TotalTimeSec DESC


	-- Number of songs in each album --

	CREATE VIEW qtysongseachalbum AS
	SELECT sgs.AlbumID, alb.Name AS AlbumName, COUNT(sgs.SongID) AS QtySongs
	FROM Songs AS sgs
	INNER JOIN Albums AS alb ON sgs.AlbumID = alb.AlbumID
	GROUP BY sgs.AlbumID, alb.Name



	-- How many songs are longer than five minutes --

	CREATE VIEW qtysongslongerthan5min AS
	SELECT sgs.AlbumID, alb.Name AS AlbumName, COUNT(sgs.SongID) AS QtySongsGreater5min
	FROM Songs AS sgs
	INNER JOIN Albums AS alb ON sgs.AlbumID = alb.AlbumID
	WHERE sgs.Duration > '00:05:00'
	GROUP BY sgs.AlbumID, alb.Name



	-- What songs were played the most --

	CREATE VIEW listsongsmostplayed AS
	SELECT sgs.Title AS SongName, art.Name AS ArtistName, COUNT(sgsp.SongPlayID) AS TotalPlays
	FROM Songs AS sgs
	INNER JOIN SongPlays AS sgsp ON sgsp.SongID = sgs.SongID
	INNER JOIN Artists AS art ON art.ArtistID = sgs.ArtistID
	GROUP BY sgs.Title, art.Name


	-- What songs were played the most, by country between 00AM and 08AM --

	CREATE VIEW songsmostplayed0am_8am AS
	WITH PlaysCountryTime1 AS
	(SELECT sgs.Title AS SongName, loc.Country AS Country, COUNT(sgsp.SongPlayID) AS TotalPlays,
	RANK() OVER(PARTITION BY loc.Country ORDER BY COUNT(sgsp.SongPlayID) DESC) AS RankByQty
	FROM Songs AS sgs
	INNER JOIN SongPlays AS sgsp ON sgsp.SongID = sgs.SongID
	INNER JOIN Artists AS art ON art.ArtistID = sgs.ArtistID
	INNER JOIN Location AS loc ON loc.LocationID = sgsp.LocationID
	WHERE CAST(sgsp.StartTime AS time) BETWEEN '00:00' AND '08:00'
	GROUP BY sgs.Title, loc.Country)
	SELECT Country, SongName, TotalPlays
	FROM PlaysCountryTime1
	WHERE RankByQty = 1


	-- What songs were played the most, by country between 08AM and 04PM --

	CREATE VIEW songsmostplayed8am_4pm AS
	WITH PlaysCountryTime2 AS
	(SELECT sgs.Title AS SongName, loc.Country AS Country, COUNT(sgsp.SongPlayID) AS TotalPlays,
	RANK() OVER(PARTITION BY loc.Country ORDER BY COUNT(sgsp.SongPlayID) DESC) AS RankByQty
	FROM Songs AS sgs
	INNER JOIN SongPlays AS sgsp ON sgsp.SongID = sgs.SongID
	INNER JOIN Artists AS art ON art.ArtistID = sgs.ArtistID
	INNER JOIN Location AS loc ON loc.LocationID = sgsp.LocationID
	WHERE CAST(sgsp.StartTime AS time) BETWEEN '08:00' AND '16:00'
	GROUP BY sgs.Title, loc.Country)
	SELECT Country, SongName, TotalPlays
	FROM PlaysCountryTime2
	WHERE RankByQty = 1


	-- What genre was most listened to --

	CREATE VIEW genremostlistened AS
	WITH QtyPlaysCountry AS
	(SELECT loc.Country AS Country, gnr.Name AS Genre, COUNT(gnr.genreID) AS TotalPlays,
	RANK() OVER(PARTITION BY loc.Country ORDER BY COUNT(gnr.genreID) DESC) AS RankByQty
	FROM SongPlays AS sgsp
	INNER JOIN Songs AS sgs ON sgs.SongID = sgsp.SongID
	INNER JOIN Genre AS gnr ON gnr.GenreID = sgs.GenreID
	INNER JOIN Location AS loc ON loc.LocationID = sgsp.LocationID
	GROUP BY loc.Country, gnr.Name)
	SELECT Country, Genre, TotalPlays
	FROM QtyPlaysCountry
	WHERE RankByQty = 1


	-- What genre was most listened to, by country between 00AM and 08AM --

	CREATE VIEW genremostlistenedbycountry0am_8am AS
	WITH PlaysGenreCountryTime1 AS
	(SELECT loc.Country AS Country, gnr.Name AS Genre, COUNT(gnr.genreID) AS TotalPlays,
	RANK() OVER(PARTITION BY loc.Country ORDER BY COUNT(gnr.genreID) DESC) AS RankByQty
	FROM SongPlays AS sgsp
	INNER JOIN Songs AS sgs ON sgs.SongID = sgsp.SongID
	INNER JOIN Genre AS gnr ON gnr.GenreID = sgs.GenreID
	INNER JOIN Location AS loc ON loc.LocationID = sgsp.LocationID
	WHERE CAST(sgsp.StartTime AS time) BETWEEN '00:00' AND '08:00'
	GROUP BY loc.Country, gnr.Name)
	SELECT Country, Genre, TotalPlays
	FROM PlaysGenreCountryTime1 
	WHERE RankByQty = 1


	-- What genre was most listened to, by country between 04PM and 00AM --

	CREATE VIEW genremostlistenedbycountry4pm_0am AS
	WITH PlaysGenreCountryTime2 AS
	(SELECT loc.Country AS Country, gnr.Name AS Genre, COUNT(gnr.genreID) AS TotalPlays,
	RANK() OVER(PARTITION BY loc.Country ORDER BY COUNT(gnr.genreID) DESC) AS RankByQty
	FROM SongPlays AS sgsp
	INNER JOIN Songs AS sgs ON sgs.SongID = sgsp.SongID
	INNER JOIN Genre AS gnr ON gnr.GenreID = sgs.GenreID
	INNER JOIN Location AS loc ON loc.LocationID = sgsp.LocationID
	WHERE CAST(sgsp.StartTime AS time) BETWEEN '08:00' AND '16:00'
	GROUP BY loc.Country, gnr.Name)
	SELECT Country, Genre, TotalPlays
	FROM PlaysGenreCountryTime2 
	WHERE RankByQty = 1

